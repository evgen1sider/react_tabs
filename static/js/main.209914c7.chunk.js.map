{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","props","tabs","onTabSelected","selectedTabId","useState","content","setContent","focus","setFocus","className","type","id","style","borderBottom","color","onClick","title","filter","tab","map","preparedTabs","App","state","getCurrentTab","find","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"wPASaA,EAAyB,SAACC,GACrC,IAAQC,EAAuCD,EAAvCC,KAAMC,EAAiCF,EAAjCE,cAAeC,EAAkBH,EAAlBG,cAC7B,EAA8BC,mBAASH,EAAK,GAAGI,SAA/C,mBAAOA,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,oBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEA,OACE,qCACE,sBAAKC,UAAU,WAAf,UACE,wBACEC,KAAK,SACLC,GAAIV,EAAK,GAAGU,GACZF,UAAU,eACVG,MAAOL,EAAQ,CACbM,aAAc,OACdC,MAAO,SACL,CACFD,aAAc,kBACdC,MAAO,qBAETC,QAAS,WACPb,EAAcC,GACdG,EAAWL,EAAK,GAAGI,SACnBG,GAAS,IAdb,SAiBGP,EAAK,GAAGe,QAEVf,EAAKgB,QAAO,SAAAC,GAAG,OAAIA,EAAIP,KAAOV,EAAK,GAAGU,MAAIQ,KAAI,SAAAD,GAAG,OAChD,8BACE,wBACER,KAAK,SACLC,GAAIO,EAAIP,GACRF,UAAU,eACVM,QAAS,WACPb,EAAcC,GACdG,EAAWY,EAAIb,SACfG,GAAS,IAPb,SAUGU,EAAIF,SAXCE,EAAIP,UAiBlB,8BACE,mBAAGF,UAAU,OAAb,SACGJ,UCnDLe,EAAsB,CAC1B,CAAET,GAAI,QAASK,MAAO,QAASX,QAAS,eACxC,CAAEM,GAAI,QAASK,MAAO,QAASX,QAAS,eACxC,CAAEM,GAAI,QAASK,MAAO,QAASX,QAAS,gBAQpCgB,E,4MACJC,MAAe,CACbrB,KAAMmB,EACNjB,cAAeiB,EAAa,GAAGT,I,EAGjCY,cAAgB,WAKd,OAJwB,EAAKD,MAAMrB,KAAKuB,MAAK,SAACN,GAAD,OAC3CA,EAAIP,KAAO,EAAKW,MAAMnB,kBAClB,EAAKmB,MAAMrB,KAAK,I,EAKxBC,cAAgB,SAACS,GACX,EAAKW,MAAMnB,gBAAkBQ,GAIjC,EAAKc,SAAU,CACbtB,cAAeQ,K,4CAInB,WACE,MAAgCe,KAAKJ,MAA7BrB,EAAR,EAAQA,KAAME,EAAd,EAAcA,cAEd,OACE,sBAAKM,UAAU,gBAAf,UACE,sBAAKA,UAAU,KAAf,gCAEGiB,KAAKH,gBAAgBP,SAGxB,cAAC,EAAD,CACEf,KAAMA,EACNC,cAAewB,KAAKxB,cACpBC,cAAeA,W,GArCPwB,IAAMC,WA4CTP,ICzDfQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.209914c7.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Tabs.scss';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (id: string) => void;\n};\n\nexport const Tabs : React.FC<Props> = (props) => {\n  const { tabs, onTabSelected, selectedTabId } = props;\n  const [content, setContent] = useState(tabs[0].content);\n  const [focus, setFocus] = useState(true);\n\n  return (\n    <>\n      <div className=\"Tabs row\">\n        <button\n          type=\"button\"\n          id={tabs[0].id}\n          className=\"Tabs__button\"\n          style={focus ? {\n            borderBottom: 'none',\n            color: 'black',\n          } : {\n            borderBottom: '1px solid black',\n            color: 'rgb(60, 104, 143)',\n          }}\n          onClick={() => {\n            onTabSelected(selectedTabId);\n            setContent(tabs[0].content);\n            setFocus(true);\n          }}\n        >\n          {tabs[0].title}\n        </button>\n        {tabs.filter(tab => tab.id !== tabs[0].id).map(tab => (\n          <div key={tab.id}>\n            <button\n              type=\"button\"\n              id={tab.id}\n              className=\"Tabs__button\"\n              onClick={() => {\n                onTabSelected(selectedTabId);\n                setContent(tab.content);\n                setFocus(false);\n              }}\n            >\n              {tab.title}\n            </button>\n          </div>\n        ))}\n      </div>\n\n      <div>\n        <p className=\"lead\">\n          {content}\n        </p>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nconst preparedTabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\ntype State = {\n  tabs: Tab[];\n  selectedTabId: string;\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    tabs: preparedTabs,\n    selectedTabId: preparedTabs[0].id,\n  };\n\n  getCurrentTab = () => {\n    const currentTab: Tab = this.state.tabs.find((tab) => (\n      tab.id === this.state.selectedTabId\n    )) || this.state.tabs[0];\n\n    return currentTab;\n  };\n\n  onTabSelected = (id: string) => {\n    if (this.state.selectedTabId === id) {\n      return;\n    }\n\n    this.setState(({\n      selectedTabId: id,\n    }));\n  };\n\n  render() {\n    const { tabs, selectedTabId } = this.state;\n\n    return (\n      <div className=\"App container\">\n        <div className=\"h1\">\n          Selected tab is&nbsp;\n          {this.getCurrentTab().title}\n        </div>\n\n        <Tabs\n          tabs={tabs}\n          onTabSelected={this.onTabSelected}\n          selectedTabId={selectedTabId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}